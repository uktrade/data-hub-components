{"version":3,"file":"main.fc8d95f4a061db8e4be8.bundle.js","sources":["webpack:///./src/forms/hooks/useField.js"],"sourcesContent":["import { useEffect } from 'react'\nimport { isEmpty } from 'lodash'\n\nimport useFormContext from './useFormContext'\n\nfunction useField({\n  name,\n  initialValue = '',\n  validate = null,\n  required = null,\n}) {\n  const {\n    registerField,\n    deregisterField,\n    setFieldTouched,\n    setFieldValue,\n    getFieldState,\n  } = useFormContext()\n\n  function prepareValidators() {\n    const validators = Array.isArray(validate)\n      ? validate\n      : [validate].filter((v) => v)\n\n    if (required) {\n      validators.unshift((value) => (isEmpty(value) ? required : null))\n    }\n\n    return validators\n  }\n\n  useEffect(() => {\n    registerField({ name, initialValue, validate: prepareValidators() })\n\n    return () => {\n      deregisterField(name)\n    }\n  }, [name])\n\n  const fieldState = getFieldState(name)\n\n  return {\n    name,\n    value: fieldState.value,\n    error: fieldState.error,\n    touched: fieldState.touched,\n    onChange: (e) => setFieldValue(name, e.target.value),\n    onBlur: () => setFieldTouched(name, true),\n  }\n}\n\nexport default useField\n"],"mappings":"AAmDA","sourceRoot":""}