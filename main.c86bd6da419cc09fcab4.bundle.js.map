{"version":3,"file":"main.c86bd6da419cc09fcab4.bundle.js","sources":["webpack:///./src/forms/elements/FieldSelect.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Select from '@govuk-react/select'\n\nimport useField from '../hooks/useField'\nimport FieldWrapper from './FieldWrapper'\n\nconst FieldSelect = ({\n  name,\n  label,\n  legend,\n  hint,\n  validate,\n  required,\n  options,\n  emptyOption,\n  ...rest\n}) => {\n  const { error, touched, value, onChange, onBlur } = useField({\n    name,\n    validate,\n    required,\n  })\n\n  return (\n    <FieldWrapper {...{ name, label, legend, hint, error }}>\n      <Select\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n        meta={{ error, touched }}\n        input={{\n          id: name,\n          defaultValue: value,\n          ...rest,\n        }}\n      >\n        {emptyOption && (\n          <option key=\"\" value=\"\">\n            {emptyOption}\n          </option>\n        )}\n        {options.map(({ label: optionLabel, value: optionValue }) => (\n          <option key={optionValue} value={optionValue}>\n            {optionLabel}\n          </option>\n        ))}\n      </Select>\n    </FieldWrapper>\n  )\n}\n\nFieldSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  legend: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  hint: PropTypes.string,\n  validate: PropTypes.func,\n  required: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n    })\n  ),\n  emptyOption: PropTypes.string,\n}\n\nFieldSelect.defaultProps = {\n  validate: null,\n  required: null,\n  label: null,\n  legend: null,\n  hint: null,\n  options: [],\n  emptyOption: 'Please select',\n}\n\nexport default FieldSelect\n"],"mappings":"AAOA","sourceRoot":""}