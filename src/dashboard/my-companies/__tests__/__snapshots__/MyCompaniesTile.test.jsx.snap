// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`My companies dashboard should match the snapshot 1`] = `
.c3 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  display: block;
  margin-bottom: 15px;
  color: #6f777b;
}

.c2 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 24px;
  line-height: 1.0416666666666667;
  display: block;
  margin-top: 0;
  margin-bottom: 20px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
}

.c1 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

@media print {
  .c3 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c3 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c2 {
    color: #000;
  }
}

@media print {
  .c2 {
    font-size: 24px;
    line-height: 1.05;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    font-size: 36px;
    line-height: 1.1111111111111112;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    margin-bottom: 30px;
  }
}

<Provider
  mockInitialState={
    Object {
      "companies": Array [
        Object {
          "company": Object {
            "id": "a1138c1c-d449-4846-aa58-18fae7e1cb92",
            "isArchived": false,
            "name": "A1 BMW LTD!!!!!",
          },
          "latestInteraction": Object {
            "date": "2019-08-14",
            "displayDate": "14 Aug 19",
            "id": "79d92719-7402-45b6-b3d7-eff559d6b282",
            "subject": "Here is a long interaction title some more text some more text some more text almost finished some more text nearly there more text finished",
          },
        },
        Object {
          "company": Object {
            "id": "a30b1db3-7140-44ca-ad7a-9824c3c2ed56",
            "isArchived": false,
            "name": "Portable Potatoes",
          },
          "latestInteraction": Object {
            "date": null,
            "displayDate": "-",
            "subject": "No interactions have been recorded",
          },
        },
        Object {
          "company": Object {
            "id": "b89b1db3-7140-44ca-ad7a-9824c3c2gh74",
            "isArchived": false,
            "name": "Zebra clothing",
          },
          "latestInteraction": Object {
            "date": "2019-02-21",
            "displayDate": "21 Feb 2019",
            "id": "86f92719-7402-45b6-b3d7-eff559d6b678",
            "subject": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
          },
        },
      ],
      "companiesInitial": Array [
        Object {
          "company": Object {
            "id": "a1138c1c-d449-4846-aa58-18fae7e1cb92",
            "isArchived": false,
            "name": "A1 BMW LTD!!!!!",
          },
          "latestInteraction": Object {
            "date": "2019-08-14",
            "displayDate": "14 Aug 19",
            "id": "79d92719-7402-45b6-b3d7-eff559d6b282",
            "subject": "Here is a long interaction title some more text some more text some more text almost finished some more text nearly there more text finished",
          },
        },
        Object {
          "company": Object {
            "id": "a30b1db3-7140-44ca-ad7a-9824c3c2ed56",
            "isArchived": false,
            "name": "Portable Potatoes",
          },
          "latestInteraction": Object {
            "date": null,
            "displayDate": "-",
            "subject": "No interactions have been recorded",
          },
        },
        Object {
          "company": Object {
            "id": "b89b1db3-7140-44ca-ad7a-9824c3c2gh74",
            "isArchived": false,
            "name": "Zebra clothing",
          },
          "latestInteraction": Object {
            "date": "2019-02-21",
            "displayDate": "21 Feb 2019",
            "id": "86f92719-7402-45b6-b3d7-eff559d6b678",
            "subject": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
          },
        },
      ],
    }
  }
>
  <MyCompaniesTile>
    <div>
      <ListSelector>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kGXeez",
                  "isStatic": true,
                  "lastClassName": "c0",
                  "rules": Array [
                    "
  display: flex;
  align-items: baseline;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kGXeez",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c0"
            >
              <Styled(H2)>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-kpOJdX",
                        "isStatic": true,
                        "lastClassName": "c1",
                        "rules": Array [
                          "
  flex-grow: 1;
",
                        ],
                      },
                      "displayName": "Styled(H2)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-kpOJdX",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <H2
                    className="c1"
                  >
                    <Heading
                      as="h2"
                      className="c1"
                      size="LARGE"
                    >
                      <styled.h1
                        as="h2"
                        className="c1"
                        size="LARGE"
                      >
                        <StyledComponent
                          as="h2"
                          className="c1"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-kgoBCf",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "color: #0b0c0c; @media print {
  color: #000;
}",
                                  [Function],
                                  "display: block; margin-top: 0;",
                                  [Function],
                                  [Function],
                                ],
                              },
                              "displayName": "styled.h1",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-kgoBCf",
                              "target": "h1",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          size="LARGE"
                        >
                          <h2
                            className="c1 c2"
                            size="LARGE"
                          >
                            My companies list
                          </h2>
                        </StyledComponent>
                      </styled.h1>
                    </Heading>
                  </H2>
                </StyledComponent>
              </Styled(H2)>
            </div>
          </StyledComponent>
        </styled.div>
      </ListSelector>
      <NoListsMsg>
        <HintText>
          <styled.span>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c3",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                      "display: block; margin-bottom: 15px; color: #6f777b;",
                      [Function],
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c3"
              >
                You have not yet created any lists with companies.
                <br />
                You can add companies to lists from a company page, and only you can see these lists.
              </span>
            </StyledComponent>
          </styled.span>
        </HintText>
      </NoListsMsg>
    </div>
  </MyCompaniesTile>
</Provider>
`;
