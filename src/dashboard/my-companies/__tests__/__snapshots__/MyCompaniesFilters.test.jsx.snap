// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyCompaniesFilters renders company filters 1`] = `
.c3 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  display: block;
  clear: none;
  padding-bottom: 2px;
  margin-bottom: 0;
}

.c4 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  box-sizing: border-box;
  width: 100%;
  height: 33px;
  padding: 5px 4px 4px;
  border: 2px solid #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.25;
}

.c4:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c2 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 12px;
  line-height: 1.25;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c1 {
  margin-right: 10px;
  padding-right: 5px;
  padding-left: 5px;
}

@media print {
  .c3 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c3 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c3 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c3 {
    margin-bottom: 0;
  }
}

@media print {
  .c4 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    width: 50%;
    height: 38px;
  }
}

@media print {
  .c4 {
    font-size: 12px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    font-size: 14px;
    line-height: 1.4285714285714286;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    width: auto;
  }
}

@media print {
  .c2 {
    font-size: 12px;
    line-height: 1.2;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    font-size: 14px;
    line-height: 1.4285714285714286;
  }
}

<Provider>
  <MyCompaniesFilters>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  justify-content: space-between;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          <styled.input
            onChange={[Function]}
            placeholder="Search list"
            type="text"
            value=""
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htoDjs",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  margin-right: ",
                      "10px",
                      ";
  padding-right: ",
                      "5px",
                      ";
  padding-left: ",
                      "5px",
                      ";
",
                    ],
                  },
                  "displayName": "styled.input",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-htoDjs",
                  "target": "input",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={
                Object {
                  "current": .c0 {
  margin-right: 10px;
  padding-right: 5px;
  padding-left: 5px;
}

<input
                    class="c0"
                    placeholder="Search list"
                    type="text"
                    value=""
                  />,
                }
              }
              onChange={[Function]}
              placeholder="Search list"
              type="text"
              value=""
            >
              <input
                className="c1"
                onChange={[Function]}
                placeholder="Search list"
                type="text"
                value=""
              />
            </StyledComponent>
          </styled.input>
          <Styled(LabelText)>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c2",
                    "rules": Array [
                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 12px; line-height: 1.2;
} font-weight: 400; font-size: 12px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 14px; line-height: 1.4285714285714286;
}",
                    ],
                  },
                  "displayName": "Styled(LabelText)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <LabelText
                className="c2"
              >
                <styled.span
                  className="c2"
                >
                  <StyledComponent
                    className="c2"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bwzfXH",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                            "color: #0b0c0c; @media print {
  color: #000;
}",
                            "display: block; clear: none; padding-bottom: 2px;",
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.span",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bwzfXH",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="c2 c3"
                    >
                      Sort By:
                       
                      <Styled(styled.select)
                        onChange={[Function]}
                        value="recent"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-EHOje",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                                  "box-sizing: border-box; width: 100%; height: 33px; padding: 5px 4px 4px; border: 2px solid #0b0c0c; @media only screen and (min-width: 641px) {
  width: 50%; height: 38px;
} :focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                                  [Function],
                                  "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 12px; line-height: 1.2;
} font-weight: 400; font-size: 12px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 14px; line-height: 1.4285714285714286;
}",
                                  "@media only screen and (min-width: 641px) {
  width: auto;
}",
                                ],
                              },
                              "displayName": "Styled(styled.select)",
                              "foldedComponentIds": Array [
                                "sc-ifAKCX",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-EHOje",
                              "target": "select",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          onChange={[Function]}
                          value="recent"
                        >
                          <select
                            className="c4"
                            onChange={[Function]}
                            value="recent"
                          >
                            <option
                              value="recent"
                            >
                              Recent interaction
                            </option>
                            <option
                              value="least-recent"
                            >
                              Least recent interaction
                            </option>
                            <option
                              value="alphabetical"
                            >
                              Company name A-Z
                            </option>
                          </select>
                        </StyledComponent>
                      </Styled(styled.select)>
                    </span>
                  </StyledComponent>
                </styled.span>
              </LabelText>
            </StyledComponent>
          </Styled(LabelText)>
        </div>
      </StyledComponent>
    </styled.div>
  </MyCompaniesFilters>
</Provider>
`;
